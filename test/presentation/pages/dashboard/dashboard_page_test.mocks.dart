// Mocks generated by Mockito 5.4.5 from annotations
// in pulseboard/test/presentation/pages/dashboard/dashboard_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pulseboard/domain/core/value_failure.dart' as _i5;
import 'package:pulseboard/domain/entities/sensor.dart' as _i6;
import 'package:pulseboard/domain/repositories/i_sensor_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ISensorRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockISensorRepository extends _i1.Mock implements _i3.ISensorRepository {
  @override
  _i4.Future<_i2.Either<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>>
  fetchSensorData() =>
      (super.noSuchMethod(
            Invocation.method(#fetchSensorData, []),
            returnValue: _i4.Future<
              _i2.Either<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>
            >.value(
              _FakeEither_0<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>(
                this,
                Invocation.method(#fetchSensorData, []),
              ),
            ),
            returnValueForMissingStub: _i4.Future<
              _i2.Either<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>
            >.value(
              _FakeEither_0<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>(
                this,
                Invocation.method(#fetchSensorData, []),
              ),
            ),
          )
          as _i4.Future<
            _i2.Either<_i5.ValueFailure<dynamic>, List<_i6.Sensor>>
          >);
}
