// Mocks generated by Mockito 5.4.5 from annotations
// in pulseboard/test/unit/repository/sensor_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:math' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pulseboard/data/datasources/mock/sensor_data_mock.dart' as _i3;
import 'package:pulseboard/domain/entities/sensor.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRandom_0 extends _i1.SmartFake implements _i2.Random {
  _FakeRandom_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SensorDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSensorDataService extends _i1.Mock implements _i3.SensorDataService {
  MockSensorDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get locations =>
      (super.noSuchMethod(
            Invocation.getter(#locations),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  _i2.Random get random =>
      (super.noSuchMethod(
            Invocation.getter(#random),
            returnValue: _FakeRandom_0(this, Invocation.getter(#random)),
          )
          as _i2.Random);

  @override
  _i4.Future<List<_i5.Sensor>> generateMockData({int? limit = 20}) =>
      (super.noSuchMethod(
            Invocation.method(#generateMockData, [], {#limit: limit}),
            returnValue: _i4.Future<List<_i5.Sensor>>.value(<_i5.Sensor>[]),
          )
          as _i4.Future<List<_i5.Sensor>>);
}
